name: Mapped Repair Events CI

on:
  push:
    paths-ignore:
      - '**.md'
      - '**.css'
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.css'
  
jobs:
  ci:
    runs-on: ubuntu-20.04
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        php-version: ['8.0']
        experimental: [false]
    services:
      mysql:
        image: mysql:5.7
        ports:
          - 8888:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: db_test
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    name: PHP ${{ matrix.php-version }}

    steps:

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mysql
        env:
          update: true #forces minor release update
          
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '16'
                      
      - uses: actions/checkout@v2

      - name: Setup DB
        run: |
          sudo /etc/init.d/mysql start
          mysql --version
          mysql -h 127.0.0.1 --port 8888 -u root -ppassword db_test < ./config/sql/database.sql
          mysql -h 127.0.0.0 --port 8888 -u root -ppassword db_test -e "mysql -Nse 'show tables' db_test | while read table; do mysql -e 'truncate table $table' db_test; done"
          
      - name: Install vendors 
        run: |
          composer install --optimize-autoloader  --no-progress
          cp ./.github/workflows/*.php ./config/
          npm --prefix ./webroot install ./webroot
          bash bin/cake migrations migrate
          
      - name: PHPStan
        if: always()
        run: vendor/bin/phpstan analyze -c phpstan.neon --no-interaction --no-progress

      - name: ESLint
        if: always()
        run: bash devtools/eslint.sh

      - name: PHPUnit
        if: always()
        run: vendor/bin/phpunit